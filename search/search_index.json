{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Keycloak Forward Auth","text":"<p>A FastAPI-based Forward Authentication (Forward Auth) service that secures backend services using Keycloak authentication. It integrates with a reverse proxy (Traefik, Nginx, or Envoy) to validate requests before forwarding them to backend services. Supports dynamic routing via Kubernetes/OpenShift DNS.</p>"},{"location":"#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Keycloak authentication enforcement with JWT</li> <li>Asynchronous request forwarding via <code>httpx</code></li> <li>Dynamic routing using DNS &amp; environment variables</li> <li>Secure session management including logout handling</li> <li>Containerized with Podman &amp; Docker</li> <li>Supports OpenShift/Kubernetes deployments</li> <li>MkDocs-based GitHub Pages documentation</li> </ul>"},{"location":"#documentation-sections","title":"\ud83d\udcd6 Documentation Sections","text":"<ul> <li>Installation \u2192 Setting up dependencies and local development</li> <li>Configuration \u2192 Managing environment variables &amp; OpenShift setup</li> <li>Authentication \u2192 Keycloak integration, login, and logout handling</li> <li>Deployment \u2192 Running with Podman, Docker, and Kubernetes</li> <li>API Reference \u2192 Proxy and authentication endpoints</li> </ul> <p>\ud83d\udd17 Source Code: GitHub Repository</p>"},{"location":"contributing/","title":"Contributing to FastAPI Reverse Proxy","text":"<p>Contributions are welcome. Follow this guide to ensure consistency and quality.</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":""},{"location":"contributing/#1-fork-and-clone","title":"1. Fork and Clone","text":"<pre><code>git clone https://github.com/yourusername/keycloak-forward-auth.git\ncd keycloak-forward-auth\n</code></pre>"},{"location":"contributing/#2-create-a-feature-branch","title":"2. Create a Feature Branch","text":"<pre><code>git checkout -b feature/your-feature-name\n</code></pre>"},{"location":"contributing/#3-install-dependencies","title":"3. Install Dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"contributing/#4-make-changes-and-test","title":"4. Make Changes and Test","text":"<ul> <li>Follow code style guidelines (<code>black</code>, <code>isort</code>).</li> <li>Run the application:   <code>bash   uvicorn app:app --reload</code></li> <li>Run tests:   <code>bash   pytest</code></li> </ul>"},{"location":"contributing/#5-commit-and-push","title":"5. Commit and Push","text":"<pre><code>git add .\ngit commit -m \"Add feature XYZ\"\ngit push origin feature/your-feature-name\n</code></pre>"},{"location":"contributing/#6-submit-a-pull-request","title":"6. Submit a Pull Request","text":"<ul> <li>Open a pull request on GitHub.</li> <li>Follow the pull request template.</li> <li>Ensure CI checks pass.</li> </ul>"},{"location":"contributing/#code-guidelines","title":"Code Guidelines","text":"<ul> <li>Follow PEP8 and Black formatting.</li> <li>Use meaningful commit messages.</li> <li>Write docstrings and type hints.</li> <li>Keep changes small and focused.</li> </ul>"},{"location":"contributing/#issues-and-discussions","title":"Issues and Discussions","text":"<ul> <li>Check existing issues before creating a new one.</li> <li>Use discussions for feature ideas.</li> <li>Provide clear steps to reproduce bugs.</li> </ul>"},{"location":"contributing/#license","title":"License","text":"<p>By contributing, you agree that your code will be under the MIT License.</p>"},{"location":"license/","title":"License","text":"<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"api/endpoints/","title":"Endpoints","text":""},{"location":"api/endpoints/#endpoints","title":"Endpoints","text":""},{"location":"api/endpoints/#1-handle-keycloak-authentication-callback","title":"1. Handle Keycloak Authentication Callback","text":""},{"location":"api/endpoints/#get-callback","title":"<code>GET /callback</code>","text":""},{"location":"api/endpoints/#description","title":"Description","text":"<p>Handles the OAuth2 authentication callback from Keycloak.</p>"},{"location":"api/endpoints/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description <code>code</code> <code>str</code> \u2705 Yes Authorization code received from Keycloak."},{"location":"api/endpoints/#response","title":"Response","text":"Status Code Description <code>302 Found</code> Redirects the user to the frontend after authentication. <code>400 Bad Request</code> Missing or invalid authorization code."},{"location":"api/endpoints/#example-request","title":"Example Request","text":"<pre><code>GET /callback?code=abcd1234 HTTP/1.1\nHost: proxy.example.com\n</code></pre>"},{"location":"api/endpoints/#example-response","title":"Example Response","text":"<ul> <li>Success: Redirects to the frontend with authentication cookies set.</li> <li>Failure: Returns <code>400 Bad Request</code> if the token exchange fails.</li> </ul>"},{"location":"api/endpoints/#2-logout-and-invalidate-session","title":"2. Logout and Invalidate Session","text":""},{"location":"api/endpoints/#get-logout","title":"<code>GET /logout</code>","text":""},{"location":"api/endpoints/#description_1","title":"Description","text":"<p>Logs out the user by: - Clearing session cookies. - Redirecting to Keycloak's logout endpoint.</p>"},{"location":"api/endpoints/#response_1","title":"Response","text":"Status Code Description <code>302 Found</code> Redirects the user to Keycloak logout. <code>204 No Content</code> Ignores browser prefetch requests."},{"location":"api/endpoints/#example-request_1","title":"Example Request","text":"<pre><code>GET /logout HTTP/1.1\nHost: proxy.example.com\n</code></pre>"},{"location":"api/endpoints/#example-response_1","title":"Example Response","text":"<ul> <li>Success: Redirects to Keycloak logout.</li> <li>Failure: If no valid session exists, the user is still redirected to Keycloak logout.</li> </ul>"},{"location":"api/endpoints/#3-proxy-requests-to-backend-services","title":"3. Proxy Requests to Backend Services","text":""},{"location":"api/endpoints/#any-full_pathpath","title":"<code>ANY /{full_path:path}</code>","text":""},{"location":"api/endpoints/#description_2","title":"Description","text":"<p>Forwards authenticated requests to backend services dynamically.</p>"},{"location":"api/endpoints/#request-parameters_1","title":"Request Parameters","text":"Parameter Type Required Description <code>full_path</code> <code>str</code> \u2705 Yes Path of the requested resource (e.g., <code>/api/data</code>)."},{"location":"api/endpoints/#authentication","title":"Authentication","text":"<ul> <li>If authenticated: Forwards the request to the correct backend service.</li> <li>If not authenticated: Redirects to Keycloak login.</li> </ul>"},{"location":"api/endpoints/#response_2","title":"Response","text":"Status Code Description <code>200 OK</code> Request is successfully forwarded. <code>302 Found</code> Redirects unauthenticated users to Keycloak login. <code>404 Not Found</code> No matching backend service found."},{"location":"api/endpoints/#example-request_2","title":"Example Request","text":"<pre><code>GET /api/data HTTP/1.1\nHost: proxy.example.com\nCookie: access_token=ey123...\n</code></pre>"},{"location":"api/endpoints/#example-response_2","title":"Example Response","text":"<ul> <li>Success: The request is forwarded to the backend service.</li> <li>Failure: If the user is not authenticated, they are redirected to Keycloak.</li> </ul>"},{"location":"api/endpoints/#authentication-mechanism","title":"Authentication Mechanism","text":"<ul> <li>Access tokens are stored in HTTP-only cookies for security.</li> <li>All requests are authenticated before being forwarded.</li> <li>CORS policies are enforced to prevent unauthorized cross-origin requests.</li> </ul>"},{"location":"api/endpoints/#logging","title":"Logging","text":"<ul> <li>Every request is logged with details such as:</li> <li>Method, URL, and authentication status.</li> <li>Failed authentication attempts and missing backend services are logged as warnings.</li> </ul>"},{"location":"api/endpoints/#error-handling","title":"Error Handling","text":"<ul> <li>400 Bad Request \u2192 Invalid authentication parameters.</li> <li>404 Not Found \u2192 No matching service for the requested path.</li> <li>302 Found \u2192 Redirects for authentication or logout flows.</li> </ul>"},{"location":"configuration/env/","title":"Environment Variables","text":""},{"location":"configuration/env/#example-env-file","title":"Example <code>.env</code> File","text":"<pre><code># Keycloak Configuration\nKEYCLOAK_ISSUER=https://keycloak.example.com/auth/realms/myrealm\nKEYCLOAK_JWKS_URL=https://keycloak.example.com/auth/realms/myrealm/protocol/openid-connect/certs\nKEYCLOAK_CLIENT_ID=my-client-id\nKEYCLOAK_CLIENT_SECRET=my-client-secret\nKEYCLOAK_LOGIN_URL=https://keycloak.example.com/login\nKEYCLOAK_LOGOUT_URL=https://keycloak.example.com/protocol/openid-connect/logout\nKEYCLOAK_SCOPE=\"openid email profile\"\n\n# Service Routing (JSON format)\nSERVICE_ROUTES_JSON={\" /\": \"http://frontend:3000\", \"/api\": \"http://backend:8080\"}\n\n# Redirect URL after login\nREDIRECT_URL=https://frontend.example.com/callback\n\n# Frontend URL\nFRONTEND_URL=https://frontend.example.com\n\n# CORS Settings\nALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS\nALLOW_HEADERS=Authorization,Content-Type\n</code></pre>"},{"location":"configuration/env/#keycloak-authentication","title":"Keycloak Authentication","text":"<p>These variables define authentication settings:</p> Variable Description <code>KEYCLOAK_ISSUER</code> Keycloak realm URL <code>KEYCLOAK_JWKS_URL</code> JSON Web Key Set (JWKS) URL <code>KEYCLOAK_CLIENT_ID</code> Keycloak client ID <code>KEYCLOAK_CLIENT_SECRET</code> Client secret for authentication <code>KEYCLOAK_LOGIN_URL</code> Login endpoint for Keycloak <code>KEYCLOAK_LOGOUT_URL</code> Logout endpoint for Keycloak <code>KEYCLOAK_SCOPE</code> Scopes requested (e.g., <code>\"openid email profile\"</code>)"},{"location":"configuration/env/#service-routing","title":"Service Routing","text":"Variable Description <code>SERVICE_ROUTES_JSON</code> JSON object mapping paths (<code>\"/api\"</code>, <code>\"/\"</code>) to backend services"},{"location":"configuration/env/#cors-settings","title":"CORS Settings","text":"<p>These variables define allowed HTTP methods and headers:</p> Variable Description <code>ALLOW_METHODS</code> Allowed HTTP methods (e.g., <code>GET, POST, PUT, DELETE, OPTIONS</code>) <code>ALLOW_HEADERS</code> Allowed HTTP headers (e.g., <code>Authorization, Content-Type</code>)"},{"location":"configuration/env/#frontend-redirect-urls","title":"Frontend &amp; Redirect URLs","text":"Variable Description <code>FRONTEND_URL</code> Base URL of the frontend <code>REDIRECT_URL</code> URL where users are redirected after authentication"},{"location":"deployment/container/","title":"Running FastAPI Reverse Proxy Locally in a Container","text":"<p>This guide explains how to build, run, and test the FastAPI reverse proxy locally using Podman or Docker.</p>"},{"location":"deployment/container/#1-prerequisites","title":"1. Prerequisites","text":"<ul> <li>Python 3.8+ (for local testing without a container)</li> <li>Podman or Docker (for containerized deployment)</li> <li>Uvicorn (ASGI server for running FastAPI)</li> <li>Keycloak instance (for authentication)</li> </ul>"},{"location":"deployment/container/#2-clone-the-repository","title":"2. Clone the Repository","text":"<pre><code>git clone https://github.com/omarmassfih/keycloak-forward-auth.git\ncd keycloak-forward-auth\n</code></pre>"},{"location":"deployment/container/#3-configure-environment-variables","title":"3. Configure Environment Variables","text":"<p>Copy the example <code>.env</code> file and update it with your Keycloak and backend service settings.</p> <pre><code>cp .env.example .env\n</code></pre> <p>Edit <code>.env</code> with the required values.</p> <p>\u27a1\ufe0f For detailed environment variable setup, see: Configuration</p>"},{"location":"deployment/container/#4-run-the-application-locally-without-a-container","title":"4. Run the Application Locally (Without a Container)","text":"<p>Install dependencies:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>Run the FastAPI application:</p> <pre><code>uvicorn src.app:app --host 0.0.0.0 --port 8000 --reload\n</code></pre> <p>Verify it's running:</p> <pre><code>curl http://localhost:8000\n</code></pre>"},{"location":"deployment/container/#5-build-and-run-in-a-container","title":"5. Build and Run in a Container","text":""},{"location":"deployment/container/#using-podman-or-docker","title":"Using Podman or Docker","text":""},{"location":"deployment/container/#51-build-the-image","title":"5.1 Build the Image","text":"<pre><code>podman build -t keycloak-forward-auth .\n# OR\ndocker build -t keycloak-forward-auth .\n</code></pre>"},{"location":"deployment/container/#52-run-the-container","title":"5.2 Run the Container","text":"<pre><code>podman run --rm -p 8000:8000 --env-file .env keycloak-forward-auth\n# OR\ndocker run --rm -p 8000:8000 --env-file .env keycloak-forward-auth\n</code></pre>"},{"location":"deployment/container/#53-verify-running-container","title":"5.3 Verify Running Container","text":"<p>Check running containers:</p> <pre><code>podman ps\n# OR\ndocker ps\n</code></pre> <p>Test the proxy:</p> <pre><code>curl http://localhost:8000\n</code></pre>"},{"location":"deployment/kubernetes/","title":"Kubernetes","text":""},{"location":"deployment/kubernetes/#deploying-to-kubernetes","title":"Deploying to Kubernetes","text":"<p>This section provides steps to deploy the FastAPI Reverse Proxy with Keycloak authentication in a Kubernetes environment.</p>"},{"location":"deployment/kubernetes/#1-create-a-namespace","title":"1. Create a Namespace","text":"<p>Namespaces help isolate resources.</p> <pre><code>kubectl create namespace keycloak-proxy\n</code></pre>"},{"location":"deployment/kubernetes/#2-create-a-configmap","title":"2. Create a ConfigMap","text":"<p>Store environment variables in a ConfigMap.</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: keycloak-forward-auth-config\n  namespace: keycloak-proxy\ndata:\n  SERVICE_ROUTES_JSON: '{\"/\": \"http://frontend:3000\", \"/api\": \"http://backend:8080\"}'\n  KEYCLOAK_ISSUER: \"https://keycloak.example.com/auth/realms/myrealm\"\n  KEYCLOAK_JWKS_URL: \"https://keycloak.example.com/auth/realms/myrealm/protocol/openid-connect/certs\"\n  KEYCLOAK_CLIENT_ID: \"my-client-id\"\n  KEYCLOAK_CLIENT_SECRET: \"my-client-secret\"\n  KEYCLOAK_LOGIN_URL: \"https://keycloak.example.com/login\"\n  KEYCLOAK_LOGOUT_URL: \"https://keycloak.example.com/protocol/openid-connect/logout\"\n  FRONTEND_URL: \"https://frontend.example.com\"\n  REDIRECT_URL: \"https://frontend.example.com/callback\"\n</code></pre> <p>Apply the <code>ConfigMap</code>:</p> <pre><code>kubectl apply -f keycloak-forward-auth-config.yaml\n</code></pre>"},{"location":"deployment/kubernetes/#for-detailed-environment-variable-setup-see-configuration","title":"\u27a1\ufe0f For detailed environment variable setup, see: Configuration","text":""},{"location":"deployment/kubernetes/#3-deploy-the-reverse-proxy","title":"3. Deploy the Reverse Proxy","text":"<p>Create a Kubernetes Deployment.</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: keycloak-forward-auth\n  namespace: keycloak-proxy\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: keycloak-forward-auth\n  template:\n    metadata:\n      labels:\n        app: keycloak-forward-auth\n    spec:\n      containers:\n      - name: keycloak-forward-auth\n        image: your-docker-registry/keycloak-forward-auth:latest\n        ports:\n          - containerPort: 8000\n        envFrom:\n          - configMapRef:\n              name: keycloak-forward-auth-config\n</code></pre> <p>Apply the deployment:</p> <pre><code>kubectl apply -f keycloak-forward-auth-deployment.yaml\n</code></pre>"},{"location":"deployment/kubernetes/#4-expose-the-reverse-proxy-as-a-service","title":"4. Expose the Reverse Proxy as a Service","text":"<p>Create a service to allow communication between pods.</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: keycloak-forward-auth\n  namespace: keycloak-proxy\nspec:\n  selector:\n    app: keycloak-forward-auth\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8000\n  type: ClusterIP\n</code></pre> <p>Apply the service:</p> <pre><code>kubectl apply -f keycloak-forward-auth-service.yaml\n</code></pre>"},{"location":"deployment/kubernetes/#5-expose-the-reverse-proxy-using-an-ingress","title":"5. Expose the Reverse Proxy Using an Ingress","text":"<p>Use an Ingress resource to expose the proxy externally.</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: keycloak-forward-auth-ingress\n  namespace: keycloak-proxy\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n    - proxy.myproject.com\n    secretName: keycloak-proxy-tls\n  rules:\n  - host: proxy.myproject.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: keycloak-forward-auth\n            port:\n              number: 80\n</code></pre> <p>Apply the ingress:</p> <pre><code>kubectl apply -f keycloak-forward-auth-ingress.yaml\n</code></pre> <p>Now, the reverse proxy is accessible at:</p> <pre><code>https://proxy.myproject.com\n</code></pre>"},{"location":"deployment/openshift/","title":"OpenShift","text":""},{"location":"deployment/openshift/#deploying-to-openshift","title":"Deploying to OpenShift","text":""},{"location":"deployment/openshift/#1-create-an-openshift-project","title":"1. Create an OpenShift Project","text":"<pre><code>oc new-project myproject\n</code></pre>"},{"location":"deployment/openshift/#2-define-configuration-via-configmap","title":"2. Define Configuration via ConfigMap","text":"<p>Create a <code>ConfigMap</code> to store environment variables.</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: keycloak-forward-auth-config\ndata:\n  SERVICE_ROUTES_JSON: '{\"/\": \"http://frontend:3000\", \"/api\": \"http://backend:8080\"}'\n  KEYCLOAK_ISSUER: \"https://keycloak.example.com/auth/realms/myrealm\"\n  KEYCLOAK_JWKS_URL: \"https://keycloak.example.com/auth/realms/myrealm/protocol/openid-connect/certs\"\n  KEYCLOAK_CLIENT_ID: \"my-client-id\"\n  KEYCLOAK_CLIENT_SECRET: \"my-client-secret\"\n  KEYCLOAK_LOGIN_URL: \"https://keycloak.example.com/login\"\n  KEYCLOAK_LOGOUT_URL: \"https://keycloak.example.com/protocol/openid-connect/logout\"\n  FRONTEND_URL: \"https://frontend.example.com\"\n  REDIRECT_URL: \"https://frontend.example.com/callback\"\n</code></pre> <p>Apply the <code>ConfigMap</code>:</p> <pre><code>oc apply -f keycloak-forward-auth-config.yaml\n</code></pre> <p>\u27a1\ufe0f For detailed environment variable setup, see: Configuration</p>"},{"location":"deployment/openshift/#3-deploy-the-reverse-proxy","title":"3. Deploy the Reverse Proxy","text":"<p>Create a deployment configuration.</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: keycloak-forward-auth\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: keycloak-forward-auth\n  template:\n    metadata:\n      labels:\n        app: keycloak-forward-auth\n    spec:\n      containers:\n      - name: keycloak-forward-auth\n        image: your-docker-registry/keycloak-forward-auth:latest\n        ports:\n          - containerPort: 8000\n        envFrom:\n          - configMapRef:\n              name: keycloak-forward-auth-config\n</code></pre> <p>Apply the deployment:</p> <pre><code>oc apply -f keycloak-forward-auth-deployment.yaml\n</code></pre>"},{"location":"deployment/openshift/#4-expose-the-reverse-proxy-as-a-service","title":"4. Expose the Reverse Proxy as a Service","text":"<p>Create a service for internal communication.</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: keycloak-forward-auth\nspec:\n  selector:\n    app: keycloak-forward-auth\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8000\n  type: ClusterIP\n</code></pre> <p>Apply the service:</p> <pre><code>oc apply -f keycloak-forward-auth-service.yaml\n</code></pre>"},{"location":"deployment/openshift/#5-create-an-openshift-route","title":"5. Create an OpenShift Route","text":"<p>Expose the service externally using an OpenShift Route.</p> <pre><code>apiVersion: route.openshift.io/v1\nkind: Route\nmetadata:\n  name: keycloak-forward-auth-route\nspec:\n  host: proxy.myproject.com\n  to:\n    kind: Service\n    name: keycloak-forward-auth\n  port:\n    targetPort: 8000\n  tls:\n    termination: edge\n</code></pre> <p>Apply the route:</p> <pre><code>oc apply -f keycloak-forward-auth-route.yaml\n</code></pre> <p>Now, the reverse proxy is accessible at:</p> <pre><code>https://proxy.myproject.com\n</code></pre>"}]}